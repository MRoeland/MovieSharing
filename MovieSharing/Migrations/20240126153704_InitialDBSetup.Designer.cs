// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieSharing.Data;

#nullable disable

namespace MovieSharing.Migrations
{
    [DbContext(typeof(MovieSharingDBContext))]
    [Migration("20240126153704_InitialDBSetup")]
    partial class InitialDBSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "9ddff8a4-9607-4383-8b06-0c88a0803861",
                            Name = "admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = "cb844563-7b72-4378-a625-5778e28aebb5",
                            Name = "user",
                            NormalizedName = "user"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8d625998-9ca2-4817-9595-169281e013e1",
                            RoleId = "9ddff8a4-9607-4383-8b06-0c88a0803861"
                        },
                        new
                        {
                            UserId = "a2775054-fe49-4b9a-ba78-c29b32fef735",
                            RoleId = "cb844563-7b72-4378-a625-5778e28aebb5"
                        },
                        new
                        {
                            UserId = "11f8f1f1-3277-4f87-9080-f034d96bcfa3",
                            RoleId = "cb844563-7b72-4378-a625-5778e28aebb5"
                        },
                        new
                        {
                            UserId = "55ac23b8-1097-4cc0-98f7-33a4c4818df8",
                            RoleId = "cb844563-7b72-4378-a625-5778e28aebb5"
                        },
                        new
                        {
                            UserId = "776acc73-0cbb-46c6-8384-eb3acc416b1a",
                            RoleId = "cb844563-7b72-4378-a625-5778e28aebb5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MovieSharing.Models.Reservatie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<string>("LidId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("LidId");

                    b.ToTable("Reservatie");
                });

            modelBuilder.Entity("VideotheekWebApp.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Aantal")
                        .HasColumnType("int");

                    b.Property<string>("Acteurs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Prijs")
                        .HasColumnType("real");

                    b.Property<string>("Regisseur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aantal = 1,
                            Acteurs = "Tom Cruise, Tim Robbins, Kelly McGillis",
                            Deleted = false,
                            Genre = "Action",
                            Prijs = 19.99f,
                            Regisseur = "Tony Scott",
                            Title = "Top Gun"
                        },
                        new
                        {
                            Id = 2,
                            Aantal = 1,
                            Acteurs = "Tom Cruise, Jennifer Connelly, Miles Teller",
                            Deleted = false,
                            Genre = "Action",
                            Prijs = 19.99f,
                            Regisseur = "Joseph Kosinski",
                            Title = "Maverick"
                        },
                        new
                        {
                            Id = 3,
                            Aantal = 1,
                            Acteurs = "Jason Statham, Melissa McCArthy, Rose Byrne, Jude Law",
                            Deleted = false,
                            Genre = "Action",
                            Prijs = 19.99f,
                            Regisseur = "Paul Feig",
                            Title = "Spy"
                        },
                        new
                        {
                            Id = 4,
                            Aantal = 1,
                            Acteurs = "Jay Baruchel, Gerard Butler, Christopher Mintz-Plasse, Craig Ferguson",
                            Deleted = false,
                            Genre = "Animation",
                            Prijs = 19.99f,
                            Regisseur = "Dean DeBlois, Chris Sanders",
                            Title = "How to train your dragon"
                        },
                        new
                        {
                            Id = 5,
                            Aantal = 1,
                            Acteurs = "Kelly Macdonald, Billy Connolly, Emma Thompson, Craig Ferguson",
                            Deleted = false,
                            Genre = "Animation",
                            Prijs = 19.99f,
                            Regisseur = "Mark Andrews, Brenda Chapman, Steve Purcell",
                            Title = "Brave"
                        },
                        new
                        {
                            Id = 6,
                            Aantal = 1,
                            Acteurs = "Vin Diesel, Paul Walker, Michelle Rodriguez",
                            Deleted = false,
                            Genre = "Action",
                            Prijs = 19.99f,
                            Regisseur = "Justin Lin",
                            Title = "Fast & Furious"
                        },
                        new
                        {
                            Id = 7,
                            Aantal = 1,
                            Acteurs = "Margot Robbie, Ryan Gosling, Issa Rae",
                            Deleted = false,
                            Genre = "Fantasy",
                            Prijs = 19.99f,
                            Regisseur = "Greta Gerwig",
                            Title = "Barbie"
                        },
                        new
                        {
                            Id = 8,
                            Aantal = 1,
                            Acteurs = "Patrick Swayze, Demi Moore, Whoopi Goldberg",
                            Deleted = false,
                            Genre = "Drama",
                            Prijs = 19.99f,
                            Regisseur = "Jerry Zucker",
                            Title = "Ghost"
                        },
                        new
                        {
                            Id = 9,
                            Aantal = 1,
                            Acteurs = "Mark Wahlberg, Mila Kunis, Seth MacFarlane",
                            Deleted = false,
                            Genre = "Comedy",
                            Prijs = 19.99f,
                            Regisseur = "Seth MacFarlane",
                            Title = "Ted"
                        },
                        new
                        {
                            Id = 10,
                            Aantal = 1,
                            Acteurs = "Ryan Reynolds, Morena Baccarin, T.J. Miller",
                            Deleted = false,
                            Genre = "Comedy",
                            Prijs = 19.99f,
                            Regisseur = "Tim Miller",
                            Title = "Deadpool"
                        },
                        new
                        {
                            Id = 11,
                            Aantal = 1,
                            Acteurs = "Leonardo DiCaprio, Jonah Hill, Margot Robbie",
                            Deleted = false,
                            Genre = "Crime",
                            Prijs = 19.99f,
                            Regisseur = "Martin Scorsese",
                            Title = "The wolf of Wallstreet"
                        },
                        new
                        {
                            Id = 12,
                            Aantal = 1,
                            Acteurs = "Julia Roberts, Richard Gere, Joan Cusack",
                            Deleted = false,
                            Genre = "Romance",
                            Prijs = 19.99f,
                            Regisseur = "Garry Marshall",
                            Title = "Runaway Bride"
                        },
                        new
                        {
                            Id = 13,
                            Aantal = 1,
                            Acteurs = "Patrick Swayze, Keanu Reeves, Gary Busey",
                            Deleted = false,
                            Genre = "Crime",
                            Prijs = 19.99f,
                            Regisseur = "Kathryn Bigelow",
                            Title = "Point Break"
                        },
                        new
                        {
                            Id = 14,
                            Aantal = 1,
                            Acteurs = "Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss",
                            Deleted = false,
                            Genre = "Sci-Fi",
                            Prijs = 19.99f,
                            Regisseur = "Lana Wachowski, Lilly Wachowski",
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = 15,
                            Aantal = 1,
                            Acteurs = "Jason Momoa, Patrick Wilson, Yahya Abdul-Mateen II",
                            Deleted = false,
                            Genre = "Fantasy",
                            Prijs = 19.99f,
                            Regisseur = "James Wan",
                            Title = "Aquaman and the Lost Kingdom"
                        },
                        new
                        {
                            Id = 16,
                            Aantal = 1,
                            Acteurs = "Matthew McConaughey, Anne Hathaway, Jessica Chastain",
                            Deleted = false,
                            Genre = "Sci-Fi",
                            Prijs = 19.99f,
                            Regisseur = "Christopher Nolan",
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 17,
                            Aantal = 1,
                            Acteurs = "Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page",
                            Deleted = false,
                            Genre = "Sci-Fi",
                            Prijs = 19.99f,
                            Regisseur = "Christopher Nolan",
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 18,
                            Aantal = 1,
                            Acteurs = "Mark Hamill, Harrison Ford, Carrie Fisher",
                            Deleted = false,
                            Genre = "Adventure",
                            Prijs = 19.99f,
                            Regisseur = "George Lucas",
                            Title = "Star Wars"
                        },
                        new
                        {
                            Id = 19,
                            Aantal = 1,
                            Acteurs = "Keanu Reeves, Michael Nyqvist, Alfie Allen",
                            Deleted = false,
                            Genre = "Crime",
                            Prijs = 19.99f,
                            Regisseur = "Chad Stahelski, David Leitch",
                            Title = "John Wick"
                        },
                        new
                        {
                            Id = 20,
                            Aantal = 1,
                            Acteurs = "Dennis Quaid, Jake Gyllenhaal, Emmy Rossum",
                            Deleted = false,
                            Genre = "Sci-Fi",
                            Prijs = 19.99f,
                            Regisseur = "Roland Emmerich",
                            Title = "The Day After Tomorrow"
                        },
                        new
                        {
                            Id = 21,
                            Aantal = 1,
                            Acteurs = "Jamie Foxx, Christoph Waltz, Leonardo DiCaprio",
                            Deleted = false,
                            Genre = "Western",
                            Prijs = 19.99f,
                            Regisseur = "Quentin Tarantino",
                            Title = "Django Unchained"
                        },
                        new
                        {
                            Id = 22,
                            Aantal = 1,
                            Acteurs = "Kevin Costner, Mary McDonnel, Graham Greene",
                            Deleted = false,
                            Genre = "Western",
                            Prijs = 19.99f,
                            Regisseur = "Kevin Costner",
                            Title = "Dances with Wolves"
                        },
                        new
                        {
                            Id = 23,
                            Aantal = 1,
                            Acteurs = "Tom Cruise, Jon Voight, Emmanuelle Béart",
                            Deleted = false,
                            Genre = "Action",
                            Prijs = 19.99f,
                            Regisseur = "Brian De Palma",
                            Title = "Mission Impossible"
                        },
                        new
                        {
                            Id = 24,
                            Aantal = 1,
                            Acteurs = "Keanu Reeves, Jennifer Connelly, Kathy Bates",
                            Deleted = false,
                            Genre = "Sci-Fi",
                            Prijs = 19.99f,
                            Regisseur = "Scott Derrickson",
                            Title = "The Day the Earth Stood still"
                        },
                        new
                        {
                            Id = 25,
                            Aantal = 1,
                            Acteurs = "Patrick Stewart, Hugh Jackman, Ian McKellen",
                            Deleted = false,
                            Genre = "Sci-Fi",
                            Prijs = 19.99f,
                            Regisseur = "Bryan Singer",
                            Title = "X-Men"
                        },
                        new
                        {
                            Id = 26,
                            Aantal = 1,
                            Acteurs = "Hugh Grant, Julia Roberts, Richard McCabe",
                            Deleted = false,
                            Genre = "Romance",
                            Prijs = 19.99f,
                            Regisseur = "Roger Michell",
                            Title = "Notting Hill"
                        },
                        new
                        {
                            Id = 27,
                            Aantal = 1,
                            Acteurs = "Morgan Freeman, Brad Pitt, Kevin Spacey",
                            Deleted = false,
                            Genre = "Mystery",
                            Prijs = 19.99f,
                            Regisseur = "David Fincher",
                            Title = "Se7en"
                        },
                        new
                        {
                            Id = 28,
                            Aantal = 1,
                            Acteurs = "Jason Biggs, Chris Klein, Thomas Ian Nicholas",
                            Deleted = false,
                            Genre = "Comedy",
                            Prijs = 19.99f,
                            Regisseur = "Paul Weitz, Chris Weitz",
                            Title = "American Pie"
                        },
                        new
                        {
                            Id = 29,
                            Aantal = 1,
                            Acteurs = "Liam Neeson, Ralph Fiennes, Ben Kingsley",
                            Deleted = false,
                            Genre = "History",
                            Prijs = 19.99f,
                            Regisseur = "Steven Spielberg",
                            Title = "Schindler's List"
                        },
                        new
                        {
                            Id = 30,
                            Aantal = 1,
                            Acteurs = "Tom Cruise, Rosamund Pike, Richard Jenkins",
                            Deleted = false,
                            Genre = "Action",
                            Prijs = 19.99f,
                            Regisseur = "Christopher McQuarrie",
                            Title = "Jack Reacher"
                        });
                });

            modelBuilder.Entity("VideotheekWebApp.Models.Lid", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Achternaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8d625998-9ca2-4817-9595-169281e013e1",
                            AccessFailedCount = 0,
                            Achternaam = "Roeland",
                            ConcurrencyStamp = "ffbc2da4-e58e-4c0d-8c0c-ff81a5e38b43",
                            Deleted = false,
                            Email = "admin@test.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@TEST.COM",
                            NormalizedUserName = "ADMIN@TEST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOBKRuQ2AH8oKjYZjQP8AtUTrTu+zYKUkZuqY1DA0fFt17K8EinWfZVQFpjREsL/dw==",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a212472b-15ed-4b71-9276-4e704d45703d",
                            TwoFactorEnabled = false,
                            UserName = "admin@test.com",
                            Voornaam = "Matthias"
                        },
                        new
                        {
                            Id = "a2775054-fe49-4b9a-ba78-c29b32fef735",
                            AccessFailedCount = 0,
                            Achternaam = "Roeland",
                            ConcurrencyStamp = "551b7114-14e6-4715-a8f6-6774755e146b",
                            Deleted = false,
                            Email = "user1@test.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@TEST.COM",
                            NormalizedUserName = "USER1@TEST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEB7nqVdOHVDeNR4VzJ86An/oxmkcY1i2RSBXWDNgh9NLpd7dyje46eX5UHPqwMwVkw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c6d9f715-0e7f-42bc-bc62-94685b40627f",
                            TwoFactorEnabled = false,
                            UserName = "user1@test.com",
                            Voornaam = "Robin"
                        },
                        new
                        {
                            Id = "11f8f1f1-3277-4f87-9080-f034d96bcfa3",
                            AccessFailedCount = 0,
                            Achternaam = "Test2",
                            ConcurrencyStamp = "4bb064a5-33b5-436b-8b5a-3d9f83cab6d3",
                            Deleted = false,
                            Email = "user2@test.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@TEST.COM",
                            NormalizedUserName = "USER2@TEST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELkSe+dIsrux4gdeW216QEBN0EpRCd50mcYef97BqTZoAvhSRME1Y4H41lMXsReKfA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f0c239a1-3a1e-4239-b01a-9d7957c2cdf7",
                            TwoFactorEnabled = false,
                            UserName = "user2@test.com",
                            Voornaam = "User2"
                        },
                        new
                        {
                            Id = "55ac23b8-1097-4cc0-98f7-33a4c4818df8",
                            AccessFailedCount = 0,
                            Achternaam = "Test3",
                            ConcurrencyStamp = "bbb15a4d-2cf8-4d77-b34d-7dd4d0e5838b",
                            Deleted = false,
                            Email = "user3@test.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@TEST.COM",
                            NormalizedUserName = "USER3@TEST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIgbxftgt6P5p8mecTkQJIO6URaB/1P2hrBUP51bTwiRbCmg+QjsUSyEUY9UZAY4wA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a669129-6a5d-49be-a66f-764a4dc91ea6",
                            TwoFactorEnabled = false,
                            UserName = "user3@test.com",
                            Voornaam = "User3"
                        },
                        new
                        {
                            Id = "776acc73-0cbb-46c6-8384-eb3acc416b1a",
                            AccessFailedCount = 0,
                            Achternaam = "Test4",
                            ConcurrencyStamp = "179a7f88-d973-4148-b5f1-c80298e3bbf2",
                            Deleted = false,
                            Email = "user4@test.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@TEST.COM",
                            NormalizedUserName = "USER4@TEST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENRyQA4MncwoQNyUUFjLYkuR2GKQAeIWjXsgp+Kw4Qm3BXyceRuQLNyI5sZ9x/8gQw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "40370986-981b-4fb0-be9c-cb7fcb7c39da",
                            TwoFactorEnabled = false,
                            UserName = "user4@test.com",
                            Voornaam = "User4"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("VideotheekWebApp.Models.Lid", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("VideotheekWebApp.Models.Lid", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideotheekWebApp.Models.Lid", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("VideotheekWebApp.Models.Lid", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieSharing.Models.Reservatie", b =>
                {
                    b.HasOne("VideotheekWebApp.Models.Film", "film")
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideotheekWebApp.Models.Lid", "lid")
                        .WithMany()
                        .HasForeignKey("LidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("film");

                    b.Navigation("lid");
                });
#pragma warning restore 612, 618
        }
    }
}
